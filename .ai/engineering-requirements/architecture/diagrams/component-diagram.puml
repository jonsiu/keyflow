@startuml KeyFlow Component Diagram
!theme plain

title KeyFlow - Monorepo Component Structure

skinparam componentStyle rectangle
skinparam packageStyle folder

' Monorepo root
package "keyflow-monorepo" {
  
  ' Packages
  package "packages/" {
    
    component [shared-ui] as sui {
      [TypingInterface]
      [VirtualKeyboard]
      [Dashboard]
      [ProgressCharts]
      --
      Dependencies:
      - React 18
      - Tailwind CSS
      - Framer Motion
      - Recharts
    }
    
    component [shared-core] as score {
      [InputValidator]
      [MetricsCalculator]
      [KeystrokeTracker]
      [SessionManager]
      [Practice Modes]
      [Validation Strategies]
      --
      Dependencies:
      - Pure TypeScript
      - NO React
      - NO platform-specific code
    }
    
    component [shared-types] as stypes {
      [TypeScript Interfaces]
      [Type Definitions]
      [Enums]
      [Constants]
      --
      Dependencies:
      - NONE (pure types)
    }
  }
  
  ' Applications
  package "apps/" {
    
    component [desktop] as desktop {
      package "src/" {
        [Pages (React)]
        [Stores (Zustand)]
        [Adapters (Tauri)]
        [Hooks]
      }
      
      package "src-tauri/" {
        [main.rs]
        [Tauri Commands]
        [Tauri Store Plugin]
        [Native APIs]
      }
      
      --
      Dependencies:
      - @keyflow/shared-ui
      - @keyflow/shared-core
      - @keyflow/shared-types
      - Tauri 2.0
      - React 18
      - Vite
    }
    
    component [web] as web {
      package "app/" {
        [Pages (Next.js)]
        [API Routes]
        [Stores (Zustand)]
        [Adapters (REST)]
      }
      
      package "components/" {
        [Web-specific wrappers]
      }
      
      --
      Dependencies:
      - @keyflow/shared-ui
      - @keyflow/shared-core
      - @keyflow/shared-types
      - Next.js 15
      - React 19
    }
  }
  
  ' Backend
  package "backend/" {
    component [api] as api {
      package "src/" {
        [Routes]
        [Controllers]
        [Services]
        [Middleware]
      }
      
      package "prisma/" {
        [Schema]
        [Migrations]
      }
      
      --
      Dependencies:
      - Express/Hono
      - Prisma
      - PostgreSQL
      - Redis
      - Clerk/Supabase
    }
  }
}

' Component relationships
desktop --> sui : imports
desktop --> score : imports
desktop --> stypes : imports

web --> sui : imports
web --> score : imports
web --> stypes : imports

sui --> score : uses
sui --> stypes : imports
score --> stypes : imports

desktop --> api : "Optional sync\n(REST calls)"
web --> api : "Required\n(REST calls)"

' Notes
note right of sui
  <b>Shared UI Package</b>
  
  90% code reuse between platforms
  
  <b>Exports:</b>
  - React components
  - Custom hooks
  - Tailwind config
  - Theme system
  
  <b>React Version:</b>
  - Uses React 18 APIs only
  - No server components
  - No Actions
  - Compatible with both apps
end note

note right of score
  <b>Shared Core Package</b>
  
  100% platform-agnostic business logic
  
  <b>Exports:</b>
  - Validation logic
  - Calculation algorithms
  - Session management
  - Practice modes
  - Strategies
  
  <b>Performance:</b>
  - Hot path: <0.1ms validation
  - No React dependencies
  - Pure TypeScript
  - Fully unit testable
end note

note right of desktop
  <b>Desktop App (Tauri)</b>
  
  <b>Bundle Size:</b> ~12 MB
  <b>Startup Time:</b> <0.5s
  <b>Memory:</b> <150 MB
  
  <b>Features:</b>
  - 100% offline functional
  - Tauri Store (local-first)
  - Native OS integration
  - System tray
  - Auto-updates
  
  <b>Performance:</b>
  - Keystroke latency: <2ms
  - React 18 + Vite
end note

note right of web
  <b>Web App (Next.js)</b>
  
  <b>First Paint:</b> <1.5s
  <b>Bundle:</b> Code-split
  
  <b>Features:</b>
  - Browser-based practice
  - Cloud-required
  - REST API integration
  - Vercel deployment
  
  <b>Performance:</b>
  - Keystroke latency: <5ms
  - React 19 optimizations
  - Server-side rendering
end note

note bottom of api
  <b>Backend API</b>
  
  <b>Response Time:</b> <100ms (p95)
  <b>Concurrent Users:</b> 50+
  
  <b>Endpoints:</b>
  - POST /api/auth/login
  - POST /api/sessions
  - GET /api/progress
  - GET /api/exercises
  
  <b>Infrastructure:</b>
  - PostgreSQL (Supabase/Neon)
  - Redis (caching)
  - Railway/Render deployment
end note

note as BuildSystem
  <b>Build System</b>
  
  <b>Monorepo Tool:</b> Turborepo or Nx
  <b>Package Manager:</b> PNPM
  
  <b>Build Pipeline:</b>
  1. Build shared packages first
  2. Cache outputs (Turborepo)
  3. Build apps in parallel
  4. Run tests
  5. Package (Tauri/Vercel)
  
  <b>Commands:</b>
  - turbo build
  - turbo dev
  - turbo test
end note

@enduml

